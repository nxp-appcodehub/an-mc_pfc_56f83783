/*
 * Copyright 2016, Freescale Semiconductor, Inc.
 * Copyright 2016-2021 NXP
 * All rights reserved.
 *
 * SPDX-License-Identifier: BSD-3-Clause
 */
/***********************************************************************************************************************
 * This file was generated by the MCUXpresso Config Tools. Any manual edits made to this file
 * will be overwritten if the respective MCUXpresso Config Tools is used to update this file.
 **********************************************************************************************************************/

#ifndef _PERIPHERALS_H_
#define _PERIPHERALS_H_

/***********************************************************************************************************************
 * Included files
 **********************************************************************************************************************/
#include "fsl_device_registers.h"
#include "Cpu.h"
#include "fsl_common.h"
#include "fsl_clock.h"
#include "freemaster.h"
#include "freemaster_serial_qsci.h"

#if defined(__cplusplus)
extern "C" {
#endif /* __cplusplus */

/***********************************************************************************************************************
 * Definitions
 **********************************************************************************************************************/
/* Definitions for BOARD_InitPeripherals functional group */
/* SIM_MISC0: SCTRL_REORDER=1, PIT_MSTR=0 */
#define SIM_MISC0_INIT 0x48U
/* MISC0 register mask */
#define SIM_MISC0_INIT_MASK 0x9U
/* BOARD_InitPeripherals defines for ADC */
/* Definition of peripheral ID */
#define ADC_PERIPHERAL ADC
/* Definition of the clock source */
#define ADC_CLOCK_SOURCE ADC_CLK_SRC
/* ADC interrupt vector ID (number). */
#define ADC_A_IRQN kADC12_CC0_VECTORn
/* ADC interrupt priority register (interrupt priority register/bitfield index). */
#define ADC_A_IRQ ADC12_CC0_IRQn
/* ADC interrupt handler identifier. */
#define ADC_A_IRQHANDLER ivINT_ADC12_CC0
/* ADC_CTRL1: DMAEN0=0, STOP0=0, START0=0, SYNC0=1, EOSIE0=0, ZCIE=0, LLMTIE=0, HLMTIE=0, CHNCFG_L=0, SMODE=5 */
#define ADC_CTRL1_INIT 0x1005U
/* ADC_CTRL2: DMAEN1=0, STOP1=0, START1=0, SYNC1=1, EOSIE1=0, CHNCFG_H=0, SIMULT=1, DIV0=3 */
#define ADC_CTRL2_INIT 0x1043U
/* ADC_ZXCTRL1: ZCE7=0, ZCE6=0, ZCE5=0, ZCE4=0, ZCE3=0, ZCE2=0, ZCE1=0, ZCE0=0 */
#define ADC_ZXCTRL1_INIT 0x0U
/* ADC_ZXCTRL2: ZCE15=0, ZCE14=0, ZCE13=0, ZCE12=0, ZCE11=0, ZCE10=0, ZCE9=0, ZCE8=0 */
#define ADC_ZXCTRL2_INIT 0x0U
/* ADC_CLIST1: SAMPLE3=3, SAMPLE2=3, SAMPLE1=3, SAMPLE0=1 */
#define ADC_CLIST1_INIT 0x3331U
/* ADC_CLIST2: SAMPLE7=3, SAMPLE6=3, SAMPLE5=3, SAMPLE4=3 */
#define ADC_CLIST2_INIT 0x3333U
/* ADC_CLIST3: SAMPLE11=14, SAMPLE10=12, SAMPLE9=13, SAMPLE8=10 */
#define ADC_CLIST3_INIT 0xECDAU
/* ADC_CLIST4: SAMPLE15=14, SAMPLE14=14, SAMPLE13=12, SAMPLE12=13 */
#define ADC_CLIST4_INIT 0xEECDU
/* ADC_SDIS: DS=32896 */
#define ADC_SDIS_INIT 0x8080U
/* ADC_LOLIM0: LLMT=0 */
#define ADC_LOLIM0_INIT 0x0U
/* ADC_LOLIM1: LLMT=0 */
#define ADC_LOLIM1_INIT 0x0U
/* ADC_LOLIM2: LLMT=0 */
#define ADC_LOLIM2_INIT 0x0U
/* ADC_LOLIM3: LLMT=0 */
#define ADC_LOLIM3_INIT 0x0U
/* ADC_LOLIM4: LLMT=0 */
#define ADC_LOLIM4_INIT 0x0U
/* ADC_LOLIM5: LLMT=0 */
#define ADC_LOLIM5_INIT 0x0U
/* ADC_LOLIM6: LLMT=0 */
#define ADC_LOLIM6_INIT 0x0U
/* ADC_LOLIM7: LLMT=0 */
#define ADC_LOLIM7_INIT 0x0U
/* ADC_LOLIM8: LLMT=0 */
#define ADC_LOLIM8_INIT 0x0U
/* ADC_LOLIM9: LLMT=0 */
#define ADC_LOLIM9_INIT 0x0U
/* ADC_LOLIM10: LLMT=0 */
#define ADC_LOLIM10_INIT 0x0U
/* ADC_LOLIM11: LLMT=0 */
#define ADC_LOLIM11_INIT 0x0U
/* ADC_LOLIM12: LLMT=0 */
#define ADC_LOLIM12_INIT 0x0U
/* ADC_LOLIM13: LLMT=0 */
#define ADC_LOLIM13_INIT 0x0U
/* ADC_LOLIM14: LLMT=0 */
#define ADC_LOLIM14_INIT 0x0U
/* ADC_LOLIM15: LLMT=0 */
#define ADC_LOLIM15_INIT 0x0U
/* ADC_HILIM0: HLMT=4095 */
#define ADC_HILIM0_INIT 0x7FF8U
/* ADC_HILIM1: HLMT=4095 */
#define ADC_HILIM1_INIT 0x7FF8U
/* ADC_HILIM2: HLMT=4095 */
#define ADC_HILIM2_INIT 0x7FF8U
/* ADC_HILIM3: HLMT=4095 */
#define ADC_HILIM3_INIT 0x7FF8U
/* ADC_HILIM4: HLMT=4095 */
#define ADC_HILIM4_INIT 0x7FF8U
/* ADC_HILIM5: HLMT=4095 */
#define ADC_HILIM5_INIT 0x7FF8U
/* ADC_HILIM6: HLMT=4095 */
#define ADC_HILIM6_INIT 0x7FF8U
/* ADC_HILIM7: HLMT=4095 */
#define ADC_HILIM7_INIT 0x7FF8U
/* ADC_HILIM8: HLMT=4095 */
#define ADC_HILIM8_INIT 0x7FF8U
/* ADC_HILIM9: HLMT=4095 */
#define ADC_HILIM9_INIT 0x7FF8U
/* ADC_HILIM10: HLMT=4095 */
#define ADC_HILIM10_INIT 0x7FF8U
/* ADC_HILIM11: HLMT=4095 */
#define ADC_HILIM11_INIT 0x7FF8U
/* ADC_HILIM12: HLMT=4095 */
#define ADC_HILIM12_INIT 0x7FF8U
/* ADC_HILIM13: HLMT=4095 */
#define ADC_HILIM13_INIT 0x7FF8U
/* ADC_HILIM14: HLMT=4095 */
#define ADC_HILIM14_INIT 0x7FF8U
/* ADC_HILIM15: HLMT=4095 */
#define ADC_HILIM15_INIT 0x7FF8U
/* ADC_OFFST0: OFFSET=0 */
#define ADC_OFFST0_INIT 0x0U
/* ADC_OFFST1: OFFSET=0 */
#define ADC_OFFST1_INIT 0x0U
/* ADC_OFFST2: OFFSET=0 */
#define ADC_OFFST2_INIT 0x0U
/* ADC_OFFST3: OFFSET=0 */
#define ADC_OFFST3_INIT 0x0U
/* ADC_OFFST4: OFFSET=0 */
#define ADC_OFFST4_INIT 0x0U
/* ADC_OFFST5: OFFSET=0 */
#define ADC_OFFST5_INIT 0x0U
/* ADC_OFFST6: OFFSET=0 */
#define ADC_OFFST6_INIT 0x0U
/* ADC_OFFST7: OFFSET=0 */
#define ADC_OFFST7_INIT 0x0U
/* ADC_OFFST8: OFFSET=0 */
#define ADC_OFFST8_INIT 0x0U
/* ADC_OFFST9: OFFSET=0 */
#define ADC_OFFST9_INIT 0x0U
/* ADC_OFFST10: OFFSET=0 */
#define ADC_OFFST10_INIT 0x0U
/* ADC_OFFST11: OFFSET=0 */
#define ADC_OFFST11_INIT 0x0U
/* ADC_OFFST12: OFFSET=0 */
#define ADC_OFFST12_INIT 0x0U
/* ADC_OFFST13: OFFSET=0 */
#define ADC_OFFST13_INIT 0x0U
/* ADC_OFFST14: OFFSET=0 */
#define ADC_OFFST14_INIT 0x0U
/* ADC_OFFST15: OFFSET=0 */
#define ADC_OFFST15_INIT 0x0U
/* ADC_PWR: PUDELAY=26, APD=0, PD1=0, PD0=0 */
#define ADC_PWR_INIT 0x1DA4U
/* ADC_CAL: SEL_VREFH_B=0, SEL_VREFL_B=0, SEL_VREFH_A=0, SEL_VREFL_A=0 */
#define ADC_CAL_INIT 0x0U
/* ADC_GC1: GAIN7=0, GAIN6=0, GAIN5=0, GAIN4=0, GAIN3=0, GAIN2=0, GAIN1=0, GAIN0=0 */
#define ADC_GC1_INIT 0x0U
/* ADC_GC2: GAIN15=0, GAIN14=0, GAIN13=0, GAIN12=0, GAIN11=0, GAIN10=0, GAIN9=0, GAIN8=0 */
#define ADC_GC2_INIT 0x0U
/* ADC_SCTRL: SC=90 */
#define ADC_SCTRL_INIT 0x5AU
/* ADC_PWR2: DIV1=3 */
#define ADC_PWR2_INIT 0x300U
/* ADC_CTRL3: UPDEN_H=0, UPDEN_L=0, DMASRC=0 */
#define ADC_CTRL3_INIT 0x0U
/* ADC_SCHLTEN: SCHLTEN=18432 */
#define ADC_SCHLTEN_INIT 0x4800U
/* ADC_ZXCTRL3: ZCE19=0, ZCE18=0, ZCE17=0, ZCE16=0 */
#define ADC_ZXCTRL3_INIT 0x0U
/* ADC_CLIST5: SEL_INTERNAL_1=0, SEL_TEMP_1=0, SEL_INTERNAL_0=0, SEL_TEMP_0=0, SAMPLE19=3, SAMPLE18=2, SAMPLE17=1, SAMPLE16=0 */
#define ADC_CLIST5_INIT 0xE4U
/* ADC_SDIS2: DS=15 */
#define ADC_SDIS2_INIT 0xFFFFU
/* ADC_LOLIM216: LLMT=0 */
#define ADC_LOLIM216_INIT 0x0U
/* ADC_LOLIM217: LLMT=0 */
#define ADC_LOLIM217_INIT 0x0U
/* ADC_LOLIM218: LLMT=0 */
#define ADC_LOLIM218_INIT 0x0U
/* ADC_LOLIM219: LLMT=0 */
#define ADC_LOLIM219_INIT 0x0U
/* ADC_HILIM216: HLMT=4095 */
#define ADC_HILIM216_INIT 0x7FF8U
/* ADC_HILIM217: HLMT=4095 */
#define ADC_HILIM217_INIT 0x7FF8U
/* ADC_HILIM218: HLMT=4095 */
#define ADC_HILIM218_INIT 0x7FF8U
/* ADC_HILIM219: HLMT=4095 */
#define ADC_HILIM219_INIT 0x7FF8U
/* ADC_OFFST216: OFFSET=0 */
#define ADC_OFFST216_INIT 0x0U
/* ADC_OFFST217: OFFSET=0 */
#define ADC_OFFST217_INIT 0x0U
/* ADC_OFFST218: OFFSET=0 */
#define ADC_OFFST218_INIT 0x0U
/* ADC_OFFST219: OFFSET=0 */
#define ADC_OFFST219_INIT 0x0U
/* ADC_GC3: GAIN19=0, GAIN18=0, GAIN17=0, GAIN16=0 */
#define ADC_GC3_INIT 0x0U
/* ADC_SCTRL2: SC=0 */
#define ADC_SCTRL2_INIT 0x0U
/* ADC_SCHLTEN2: SCHLTEN=0 */
#define ADC_SCHLTEN2_INIT 0x0U
/* BOARD_InitPeripherals defines for COP */
/* Definition of peripheral ID. */
#define COP_PERIPHERAL COP
/* Definition of the clock source */
#define COP_CLOCK_SOURCE COP_CLK_SRC
/* COP_CTRL: PSS=3, INTEN=0, CLKSEL=0, CLOREN=0, CSEN=0, CWEN=0, CEN=0, CWP=0 */
#define COP_CTRL_INIT 0x300U
/* COP_TOUT: TIMEOUT=1000 */
#define COP_TOUT_INIT 0x3E8U
/* COP_INTVAL: INTERRUPT_VALUE=255 */
#define COP_INTVAL_INIT 0xFFU
/* COP_WINDOW: WINDOW_VALUE=65535 */
#define COP_WINDOW_INIT 0xFFFFU
/* EVTG_EVTG0_AOI0_BFT01: PT0_AC=1, PT0_BC=3, PT0_CC=3, PT0_DC=3, PT1_AC=3, PT1_BC=1, PT1_CC=3, PT1_DC=3 */
#define EVTG_EVTG0_AOI0_BFT01_INIT 0x7FDFU
/* EVTG_EVTG0_AOI0_BFT23: PT2_AC=3, PT2_BC=3, PT2_CC=1, PT2_DC=3, PT3_AC=3, PT3_BC=3, PT3_CC=3, PT3_DC=1 */
#define EVTG_EVTG0_AOI0_BFT23_INIT 0xF7FDU
/* EVTG_EVTG0_AOI1_BFT01: PT0_AC=0, PT0_BC=0, PT0_CC=0, PT0_DC=0, PT1_AC=0, PT1_BC=0, PT1_CC=0, PT1_DC=0 */
#define EVTG_EVTG0_AOI1_BFT01_INIT 0x0U
/* EVTG_EVTG0_AOI1_BFT23: PT2_AC=0, PT2_BC=0, PT2_CC=0, PT2_DC=0, PT3_AC=0, PT3_BC=0, PT3_CC=0, PT3_DC=0 */
#define EVTG_EVTG0_AOI1_BFT23_INIT 0x0U
/* EVTG_EVTG0_CTRL: SYNC_CTRL=0, FB_OVRD=0, MODE_SEL=0, INIT_EN=0, FF_INIT=0 */
#define EVTG_EVTG0_CTRL_INIT 0x0U
/* EVTG_EVTG0_AOI0_FILT: FILT_CNT=0, FILT_PER=0 */
#define EVTG_EVTG0_AOI0_FILT_INIT 0x0U
/* EVTG_EVTG0_AOI1_FILT: FILT_CNT=0, FILT_PER=0 */
#define EVTG_EVTG0_AOI1_FILT_INIT 0x0U
/* EVTG_EVTG1_AOI0_BFT01: PT0_AC=1, PT0_BC=3, PT0_CC=3, PT0_DC=3, PT1_AC=0, PT1_BC=0, PT1_CC=0, PT1_DC=0 */
#define EVTG_EVTG1_AOI0_BFT01_INIT 0x7F00U
/* EVTG_EVTG1_AOI0_BFT23: PT2_AC=3, PT2_BC=3, PT2_CC=1, PT2_DC=3, PT3_AC=0, PT3_BC=0, PT3_CC=0, PT3_DC=0 */
#define EVTG_EVTG1_AOI0_BFT23_INIT 0xF700U
/* EVTG_EVTG1_AOI1_BFT01: PT0_AC=0, PT0_BC=0, PT0_CC=0, PT0_DC=0, PT1_AC=0, PT1_BC=0, PT1_CC=0, PT1_DC=0 */
#define EVTG_EVTG1_AOI1_BFT01_INIT 0x0U
/* EVTG_EVTG1_AOI1_BFT23: PT2_AC=0, PT2_BC=0, PT2_CC=0, PT2_DC=0, PT3_AC=0, PT3_BC=0, PT3_CC=0, PT3_DC=0 */
#define EVTG_EVTG1_AOI1_BFT23_INIT 0x0U
/* EVTG_EVTG1_CTRL: SYNC_CTRL=0, FB_OVRD=0, MODE_SEL=0, INIT_EN=0, FF_INIT=0 */
#define EVTG_EVTG1_CTRL_INIT 0x0U
/* EVTG_EVTG1_AOI0_FILT: FILT_CNT=0, FILT_PER=0 */
#define EVTG_EVTG1_AOI0_FILT_INIT 0x0U
/* EVTG_EVTG1_AOI1_FILT: FILT_CNT=0, FILT_PER=0 */
#define EVTG_EVTG1_AOI1_FILT_INIT 0x0U
/* BOARD_InitPeripherals defines for PIT0 */
/* Definition of peripheral ID. */
#define PIT0_PERIPHERAL PIT0
/* Definition of the PIT0 clock source frequency in Hertz */
#define PIT0_CLK_SOURCE_FREQ_HZ 8000000U
/* Definition of the PIT0 counter clock source frequency in Hertz divided by prescaler */
#define PIT0_COUNTER_CLK_SOURCE_FREQ_HZ 8000000U
/* Definition of the PIT0 counter roll-over frequency in Hertz */
#define PIT0_ROLLOVER_FREQ_HZ 10013U
/* PIT0_CTRL: SLAVE=0, CLKSEL=2, PRESCALER=0, PRIE=1, CNT_EN=0 */
#define PIT0_CTRL_INIT 0x202U
/* PIT0_MOD: MODULO_VALUE=799 */
#define PIT0_MOD_INIT 0x31FU
/* PIT0 interrupt vector ID (number). */
#define PIT0_IRQN kPIT0_ROLLOVR_VECTORn
/* PIT0 interrupt priority register (interrupt priority register/bitfield index). */
#define PIT0_IRQ PIT0_ROLLOVR_IRQn
/* PIT0 interrupt handler identifier. */
#define PIT0_IRQHANDLER ivINT_PIT0_ROLLOVR
/* Definition of peripheral ID */
#define PWMA_PERIPHERAL PWMA
/* Definition of clock source of submodule 0 frequency in Hertz */
#define PWMA_SM0_SM_CLK_SOURCE_FREQ_HZ 100000000U
/* Definition of submodule 0 counter clock source frequency in Hertz - PWMA_SM0_SM_CLK_SOURCE_FREQ_HZ divided by prescaler */
#define PWMA_SM0_COUNTER_CLK_SOURCE_FREQ_HZ 100000000U
/* PWMA interrupt vector ID (number). */
#define PWMA_COMPARE_0_IRQN keFlexPWMA_CMP0_VECTORn
/* PWMA interrupt priority register (interrupt priority register/bitfield index). */
#define PWMA_COMPARE_0_IRQ eFlexPWMA_CMP0_IRQn
/* PWMA interrupt handler identifier. */
#define PWMA_COMPARE_0_IRQHANDLER ivINT_eFlexPWMA_CMP0
/* Definition of clock source of submodule 1 frequency in Hertz */
#define PWMA_SM1_SM_CLK_SOURCE_FREQ_HZ 100000000U
/* Definition of submodule 1 counter clock source frequency in Hertz - PWMA_SM1_SM_CLK_SOURCE_FREQ_HZ divided by prescaler */
#define PWMA_SM1_COUNTER_CLK_SOURCE_FREQ_HZ 100000000U
/* Definition of clock source of submodule 2 frequency in Hertz */
#define PWMA_SM2_SM_CLK_SOURCE_FREQ_HZ 100000000U
/* Definition of submodule 2 counter clock source frequency in Hertz - PWMA_SM2_SM_CLK_SOURCE_FREQ_HZ divided by prescaler */
#define PWMA_SM2_COUNTER_CLK_SOURCE_FREQ_HZ 100000000U
/* Definition of clock source of submodule 3 frequency in Hertz */
#define PWMA_SM3_SM_CLK_SOURCE_FREQ_HZ 100000000U
/* Definition of submodule 3 counter clock source frequency in Hertz - PWMA_SM3_SM_CLK_SOURCE_FREQ_HZ divided by prescaler */
#define PWMA_SM3_COUNTER_CLK_SOURCE_FREQ_HZ 100000000U
/* PWMA_SM0INIT: INIT=62410 */
#define PWMA_SM0INIT_INIT 0xF3CAU
/* PWMA_SM0CTRL2: DBGEN=0, WAITEN=0, INDEP=0, PWM23_INIT=0, PWM45_INIT=0, PWMX_INIT=0, INIT_SEL=0, FRCEN=0, FORCE_SEL=0, RELOAD_SEL=0, CLK_SEL=0 */
#define PWMA_SM0CTRL2_INIT 0x0U
/* PWMA_SM0CTRL: LDFQ=0, HALF=0, FULL=1, COMPMODE=0, PRSC=0, SPLIT=0, LDMOD=0, DBLX=0, DBLEN=0 */
#define PWMA_SM0CTRL_INIT 0x400U
/* PWMA_SM0VAL0: VAL0=62596 */
#define PWMA_SM0VAL0_INIT 0xF484U
/* PWMA_SM0FRACVAL1: FRACVAL1=0 */
#define PWMA_SM0FRACVAL1_INIT 0x0U
/* PWMA_SM0VAL1: VAL1=3125 */
#define PWMA_SM0VAL1_INIT 0xC35U
/* PWMA_SM0FRACVAL2: FRACVAL2=0 */
#define PWMA_SM0FRACVAL2_INIT 0x0U
/* PWMA_SM0VAL2: VAL2=63973 */
#define PWMA_SM0VAL2_INIT 0xF9E5U
/* PWMA_SM0FRACVAL3: FRACVAL3=0 */
#define PWMA_SM0FRACVAL3_INIT 0x0U
/* PWMA_SM0VAL3: VAL3=1563 */
#define PWMA_SM0VAL3_INIT 0x61BU
/* PWMA_SM0FRACVAL4: FRACVAL4=0 */
#define PWMA_SM0FRACVAL4_INIT 0x0U
/* PWMA_SM0VAL4: VAL4=62509 */
#define PWMA_SM0VAL4_INIT 0xF42DU
/* PWMA_SM0FRACVAL5: FRACVAL5=0 */
#define PWMA_SM0FRACVAL5_INIT 0x0U
/* PWMA_SM0VAL5: VAL5=62946 */
#define PWMA_SM0VAL5_INIT 0xF5E2U
/* PWMA_SM0FRCTRL: FRAC_PU=0, FRAC45_EN=0, FRAC23_EN=0, FRAC1_EN=0 */
#define PWMA_SM0FRCTRL_INIT 0x0U
/* PWMA_SM0OCTRL: POLA=0, POLB=0, PWMAFS=0, PWMBFS=0 */
#define PWMA_SM0OCTRL_INIT 0x0U
/* PWMA_SM0STS: REF=0, RF=0, CFA1=0, CFA0=0, CFB1=0, CFB0=0, CFX1=0, CFX0=0, CMPF=1 */
#define PWMA_SM0STS_INIT 0x1U
/* PWMA_SM0INTEN: REIE=0, RIE=0, CA1IE=0, CA0IE=0, CB1IE=0, CB0IE=0, CX1IE=0, CX0IE=0, CMPIE=1 */
#define PWMA_SM0INTEN_INIT 0x1U
/* PWMA_SM0TCTRL: PWAOT0=0, PWBOT1=0, TRGFRQ=0, OUT_TRIG_EN=48 */
#define PWMA_SM0TCTRL_INIT 0x30U
/* PWMA_SM0DISMAP0: DIS0B=1, DIS0A=1 */
#define PWMA_SM0DISMAP0_INIT 0xFF11U
/* PWMA_SM0DISMAP1: DIS1B=0, DIS1A=0 */
#define PWMA_SM0DISMAP1_INIT 0xFF00U
/* PWMA_SM0DTCNT0: DTCNT0=150 */
#define PWMA_SM0DTCNT0_INIT 0x96U
/* PWMA_SM0DTCNT1: DTCNT1=150 */
#define PWMA_SM0DTCNT1_INIT 0x96U
/* PWMA_SM1INIT: INIT=62410 */
#define PWMA_SM1INIT_INIT 0xF3CAU
/* PWMA_SM1CTRL2: DBGEN=0, WAITEN=0, INDEP=0, PWM23_INIT=0, PWM45_INIT=0, PWMX_INIT=0, INIT_SEL=2, FRCEN=0, FORCE_SEL=0, RELOAD_SEL=1, CLK_SEL=0 */
#define PWMA_SM1CTRL2_INIT 0x204U
/* PWMA_SM1CTRL: LDFQ=0, HALF=0, FULL=1, COMPMODE=0, PRSC=0, SPLIT=0, LDMOD=0, DBLX=0, DBLEN=0 */
#define PWMA_SM1CTRL_INIT 0x400U
/* PWMA_SM1VAL0: VAL0=0 */
#define PWMA_SM1VAL0_INIT 0x0U
/* PWMA_SM1FRACVAL1: FRACVAL1=0 */
#define PWMA_SM1FRACVAL1_INIT 0x0U
/* PWMA_SM1VAL1: VAL1=65535 */
#define PWMA_SM1VAL1_INIT 0xFFFFU
/* PWMA_SM1FRACVAL2: FRACVAL2=0 */
#define PWMA_SM1FRACVAL2_INIT 0x0U
/* PWMA_SM1VAL2: VAL2=63973 */
#define PWMA_SM1VAL2_INIT 0xF9E5U
/* PWMA_SM1FRACVAL3: FRACVAL3=0 */
#define PWMA_SM1FRACVAL3_INIT 0x0U
/* PWMA_SM1VAL3: VAL3=1563 */
#define PWMA_SM1VAL3_INIT 0x61BU
/* PWMA_SM1FRACVAL4: FRACVAL4=0 */
#define PWMA_SM1FRACVAL4_INIT 0x0U
/* PWMA_SM1VAL4: VAL4=63467 */
#define PWMA_SM1VAL4_INIT 0xF7EBU
/* PWMA_SM1FRACVAL5: FRACVAL5=0 */
#define PWMA_SM1FRACVAL5_INIT 0x0U
/* PWMA_SM1VAL5: VAL5=536 */
#define PWMA_SM1VAL5_INIT 0x218U
/* PWMA_SM1FRCTRL: FRAC_PU=0, FRAC45_EN=0, FRAC23_EN=0, FRAC1_EN=0 */
#define PWMA_SM1FRCTRL_INIT 0x0U
/* PWMA_SM1OCTRL: POLA=0, POLB=0, PWMAFS=0, PWMBFS=0 */
#define PWMA_SM1OCTRL_INIT 0x0U
/* PWMA_SM1STS: REF=0, RF=0, CFA1=0, CFA0=0, CFB1=0, CFB0=0, CFX1=0, CFX0=0, CMPF=0 */
#define PWMA_SM1STS_INIT 0x0U
/* PWMA_SM1INTEN: REIE=0, RIE=0, CA1IE=0, CA0IE=0, CB1IE=0, CB0IE=0, CX1IE=0, CX0IE=0, CMPIE=0 */
#define PWMA_SM1INTEN_INIT 0x0U
/* PWMA_SM1TCTRL: PWAOT0=0, PWBOT1=0, TRGFRQ=0, OUT_TRIG_EN=48 */
#define PWMA_SM1TCTRL_INIT 0x30U
/* PWMA_SM1DISMAP0: DIS0B=1, DIS0A=1 */
#define PWMA_SM1DISMAP0_INIT 0xFF11U
/* PWMA_SM1DISMAP1: DIS1B=0, DIS1A=0 */
#define PWMA_SM1DISMAP1_INIT 0xFF00U
/* PWMA_SM1DTCNT0: DTCNT0=150 */
#define PWMA_SM1DTCNT0_INIT 0x96U
/* PWMA_SM1DTCNT1: DTCNT1=150 */
#define PWMA_SM1DTCNT1_INIT 0x96U
/* PWMA_SM1PHASEDLY: PHASEDLY=0 */
#define PWMA_SM1PHASEDLY_INIT 0x0U
/* PWMA_SM2INIT: INIT=62410 */
#define PWMA_SM2INIT_INIT 0xF3CAU
/* PWMA_SM2CTRL2: DBGEN=0, WAITEN=0, INDEP=0, PWM23_INIT=0, PWM45_INIT=0, PWMX_INIT=0, INIT_SEL=2, FRCEN=0, FORCE_SEL=0, RELOAD_SEL=1, CLK_SEL=0 */
#define PWMA_SM2CTRL2_INIT 0x204U
/* PWMA_SM2CTRL: LDFQ=0, HALF=0, FULL=1, COMPMODE=0, PRSC=0, SPLIT=0, LDMOD=0, DBLX=0, DBLEN=0 */
#define PWMA_SM2CTRL_INIT 0x400U
/* PWMA_SM2VAL0: VAL0=0 */
#define PWMA_SM2VAL0_INIT 0x0U
/* PWMA_SM2FRACVAL1: FRACVAL1=0 */
#define PWMA_SM2FRACVAL1_INIT 0x0U
/* PWMA_SM2VAL1: VAL1=65535 */
#define PWMA_SM2VAL1_INIT 0xFFFFU
/* PWMA_SM2FRACVAL2: FRACVAL2=0 */
#define PWMA_SM2FRACVAL2_INIT 0x0U
/* PWMA_SM2VAL2: VAL2=63973 */
#define PWMA_SM2VAL2_INIT 0xF9E5U
/* PWMA_SM2FRACVAL3: FRACVAL3=0 */
#define PWMA_SM2FRACVAL3_INIT 0x0U
/* PWMA_SM2VAL3: VAL3=1563 */
#define PWMA_SM2VAL3_INIT 0x61BU
/* PWMA_SM2FRACVAL4: FRACVAL4=0 */
#define PWMA_SM2FRACVAL4_INIT 0x0U
/* PWMA_SM2VAL4: VAL4=1057 */
#define PWMA_SM2VAL4_INIT 0x421U
/* PWMA_SM2FRACVAL5: FRACVAL5=0 */
#define PWMA_SM2FRACVAL5_INIT 0x0U
/* PWMA_SM2VAL5: VAL5=0 */
#define PWMA_SM2VAL5_INIT 0x0U
/* PWMA_SM2FRCTRL: FRAC_PU=0, FRAC45_EN=0, FRAC23_EN=0, FRAC1_EN=0 */
#define PWMA_SM2FRCTRL_INIT 0x0U
/* PWMA_SM2OCTRL: POLA=0, POLB=0, PWMAFS=0, PWMBFS=0 */
#define PWMA_SM2OCTRL_INIT 0x0U
/* PWMA_SM2STS: REF=0, RF=0, CFA1=0, CFA0=0, CFB1=0, CFB0=0, CFX1=0, CFX0=0, CMPF=0 */
#define PWMA_SM2STS_INIT 0x0U
/* PWMA_SM2INTEN: REIE=0, RIE=0, CA1IE=0, CA0IE=0, CB1IE=0, CB0IE=0, CX1IE=0, CX0IE=0, CMPIE=0 */
#define PWMA_SM2INTEN_INIT 0x0U
/* PWMA_SM2TCTRL: PWAOT0=0, PWBOT1=0, TRGFRQ=0, OUT_TRIG_EN=16 */
#define PWMA_SM2TCTRL_INIT 0x10U
/* PWMA_SM2DISMAP0: DIS0B=1, DIS0A=1 */
#define PWMA_SM2DISMAP0_INIT 0xFF11U
/* PWMA_SM2DISMAP1: DIS1B=0, DIS1A=0 */
#define PWMA_SM2DISMAP1_INIT 0xFF00U
/* PWMA_SM2DTCNT0: DTCNT0=150 */
#define PWMA_SM2DTCNT0_INIT 0x96U
/* PWMA_SM2DTCNT1: DTCNT1=150 */
#define PWMA_SM2DTCNT1_INIT 0x96U
/* PWMA_SM2PHASEDLY: PHASEDLY=0 */
#define PWMA_SM2PHASEDLY_INIT 0x0U
/* PWMA_SM3INIT: INIT=65015 */
#define PWMA_SM3INIT_INIT 0xFDF7U
/* PWMA_SM3CTRL2: DBGEN=0, WAITEN=0, INDEP=1, PWM23_INIT=0, PWM45_INIT=1, PWMX_INIT=0, INIT_SEL=0, FRCEN=1, FORCE_SEL=5, RELOAD_SEL=0, CLK_SEL=0 */
#define PWMA_SM3CTRL2_INIT 0x28A8U
/* PWMA_SM3CTRL: LDFQ=0, HALF=0, FULL=1, COMPMODE=0, PRSC=0, SPLIT=0, LDMOD=0, DBLX=0, DBLEN=0 */
#define PWMA_SM3CTRL_INIT 0x400U
/* PWMA_SM3VAL0: VAL0=0 */
#define PWMA_SM3VAL0_INIT 0x0U
/* PWMA_SM3FRACVAL1: FRACVAL1=0 */
#define PWMA_SM3FRACVAL1_INIT 0x0U
/* PWMA_SM3VAL1: VAL1=520 */
#define PWMA_SM3VAL1_INIT 0x208U
/* PWMA_SM3FRACVAL2: FRACVAL2=0 */
#define PWMA_SM3FRACVAL2_INIT 0x0U
/* PWMA_SM3VAL2: VAL2=0 */
#define PWMA_SM3VAL2_INIT 0x0U
/* PWMA_SM3FRACVAL3: FRACVAL3=0 */
#define PWMA_SM3FRACVAL3_INIT 0x0U
/* PWMA_SM3VAL3: VAL3=0 */
#define PWMA_SM3VAL3_INIT 0x0U
/* PWMA_SM3FRACVAL4: FRACVAL4=0 */
#define PWMA_SM3FRACVAL4_INIT 0x0U
/* PWMA_SM3VAL4: VAL4=0 */
#define PWMA_SM3VAL4_INIT 0x0U
/* PWMA_SM3FRACVAL5: FRACVAL5=0 */
#define PWMA_SM3FRACVAL5_INIT 0x0U
/* PWMA_SM3VAL5: VAL5=0 */
#define PWMA_SM3VAL5_INIT 0x0U
/* PWMA_SM3FRCTRL: FRAC_PU=1, FRAC45_EN=1, FRAC23_EN=1, FRAC1_EN=0 */
#define PWMA_SM3FRCTRL_INIT 0x114U
/* PWMA_SM3OCTRL: POLA=0, POLB=0, PWMAFS=0, PWMBFS=0 */
#define PWMA_SM3OCTRL_INIT 0x0U
/* PWMA_SM3STS: REF=0, RF=0, CFA1=0, CFA0=0, CFB1=0, CFB0=0, CFX1=0, CFX0=0, CMPF=0 */
#define PWMA_SM3STS_INIT 0x0U
/* PWMA_SM3INTEN: REIE=0, RIE=0, CA1IE=0, CA0IE=0, CB1IE=0, CB0IE=0, CX1IE=0, CX0IE=0, CMPIE=0 */
#define PWMA_SM3INTEN_INIT 0x0U
/* PWMA_SM3TCTRL: PWAOT0=0, PWBOT1=0, TRGFRQ=0, OUT_TRIG_EN=0 */
#define PWMA_SM3TCTRL_INIT 0x0U
/* PWMA_SM3DISMAP0: DIS0B=3, DIS0A=3 */
#define PWMA_SM3DISMAP0_INIT 0xFF33U
/* PWMA_SM3DISMAP1: DIS1B=0, DIS1A=0 */
#define PWMA_SM3DISMAP1_INIT 0xFF00U
/* PWMA_SM3DTCNT0: DTCNT0=65504 */
#define PWMA_SM3DTCNT0_INIT 0xFFE0U
/* PWMA_SM3DTCNT1: DTCNT1=65504 */
#define PWMA_SM3DTCNT1_INIT 0xFFE0U
/* PWMA_OUTEN: PWMA_EN=0, PWMB_EN=0, PWMX_EN=0 */
#define PWMA_OUTEN_INIT 0x0U
/* PWMA_MASK: UPDATE_MASK=0, MASKA=0, MASKB=0, MASKX=0 */
#define PWMA_MASK_INIT 0x0U
/* PWMA_SWCOUT: SM3OUT23=0, SM3OUT45=0, SM2OUT23=0, SM2OUT45=0, SM1OUT23=0, SM1OUT45=0, SM0OUT23=0, SM0OUT45=0 */
#define PWMA_SWCOUT_INIT 0x0U
/* PWMA_DTSRCSEL: SM3SEL23=0, SM3SEL45=0, SM2SEL23=0, SM2SEL45=0, SM1SEL23=0, SM1SEL45=0, SM0SEL23=0, SM0SEL45=0 */
#define PWMA_DTSRCSEL_INIT 0x0U
/* PWMA_MCTRL: IPOL=0, RUN=0, LDOK=15 */
#define PWMA_MCTRL_INIT 0xFU
/* PWMA_MCTRL2: MONPLL=0 */
#define PWMA_MCTRL2_INIT 0x0U
/* PWMA_FCTRL0: FLVL=2, FAUTO=0, FSAFE=3, FIE=0 */
#define PWMA_FCTRL0_INIT 0x2030U
/* PWMA_FSTS0: FHALF=0, FFULL=3 */
#define PWMA_FSTS0_INIT 0x30U
/* PWMA_FFILT0: GSTR=0, FILT_CNT=2, FILT_PER=2 */
#define PWMA_FFILT0_INIT 0x202U
/* PWMA_FTST0: FTEST=0 */
#define PWMA_FTST0_INIT 0x0U
/* PWMA_FCTRL20: NOCOMB=3 */
#define PWMA_FCTRL20_INIT 0x3U
/* PWMA_FCTRL1: FLVL=0, FAUTO=0, FSAFE=0, FIE=0 */
#define PWMA_FCTRL1_INIT 0x0U
/* PWMA_FSTS1: FHALF=0, FFULL=0 */
#define PWMA_FSTS1_INIT 0x0U
/* PWMA_FFILT1: GSTR=0, FILT_CNT=0, FILT_PER=0 */
#define PWMA_FFILT1_INIT 0x0U
/* PWMA_FTST1: FTEST=0 */
#define PWMA_FTST1_INIT 0x0U
/* PWMA_FCTRL21: NOCOMB=0 */
#define PWMA_FCTRL21_INIT 0x0U
/* OUTEN register mask */
#define PWMA_OUTEN_INIT_MASK 0xFFFU
/* MASK register mask */
#define PWMA_MASK_INIT_MASK 0xFFFFU
/* SWCOUT register mask */
#define PWMA_SWCOUT_INIT_MASK 0xFFU
/* DTSRCSEL register mask */
#define PWMA_DTSRCSEL_INIT_MASK 0xFFFFU
/* MCTRL register mask */
#define PWMA_MCTRL_INIT_MASK 0xFFFFU

/* QSCI0_RATE: SBRL=54, FRAC_SBR=2 */
#define QSCI0_RATE_INIT 0x1B2U
/* QSCI0_CTRL1: LOOP=0, SWAI=0, RSRC=0, M=0, WAKE=0, POL=0, PE=0, PT=0, TEIE=0, TIIE=0, RFIE=0, REIE=0, TE=1, RE=1, RWU=0 */
#define QSCI0_CTRL1_INIT 0xCU
/* QSCI0_CTRL2: TFWM=0, RFWM=0, FIFO_EN=0, RIEIE=0, LINMODE=0, RIIE=0, TDE=0, RDE=0 */
#define QSCI0_CTRL2_INIT 0x0U
/* QSCI0_CTRL3: SBRH=0, SHEN=0 */
#define QSCI0_CTRL3_INIT 0x0U
/* Definition of peripheral ID */
#define TMRA_PERIPHERAL TMRA
/* Definition of the timer channel 0 clock source frequency. */
#define TMRA_CHANNEL_0_CLOCK_SOURCE 100000000UL
/* Definition of the timer channel 1 clock source frequency. */
#define TMRA_CHANNEL_1_CLOCK_SOURCE 100000000UL
/* Definition of the timer channel 2 clock source frequency. */
#define TMRA_CHANNEL_2_CLOCK_SOURCE 100000000UL
/* Definition of the timer enable mask for all channels. */
#define TMRA_ENBL_INIT_MASK TMR_ENBL_ENBL_MASK
/* TMRA_COMP10: COMPARISON_1=0 */
#define TMRA_COMP10_INIT 0x0U
/* TMRA_COMP20: COMPARISON_2=0 */
#define TMRA_COMP20_INIT 0x0U
/* TMRA_LOAD0: LOAD=0 */
#define TMRA_LOAD0_INIT 0x0U
/* TMRA_CNTR0: COUNTER=0 */
#define TMRA_CNTR0_INIT 0x0U
/* TMRA_CTRL0: CM=1, PCS=8, SCS=0, ONCE=0, LENGTH=0, DIR=0, COINIT=0, OUTMODE=0 */
#define TMRA_CTRL0_INIT 0x3000U
/* TMRA_SCTRL0: TCFIE=0, TOFIE=0, IEFIE=0, IPS=0, CAPTURE_MODE=0, MSTR=0, EEOF=0, VAL=0, FORCE=0, OPS=0, OEN=0 */
#define TMRA_SCTRL0_INIT 0x0U
/* TMRA_CMPLD10: COMPARATOR_LOAD_1=0 */
#define TMRA_CMPLD10_INIT 0x0U
/* TMRA_CMPLD20: COMPARATOR_LOAD_2=0 */
#define TMRA_CMPLD20_INIT 0x0U
/* TMRA_CSCTRL0: DBG_EN=0, FAULT=0, ALT_LOAD=0, ROC=0, TCI=0, TCF2EN=0, TCF1EN=0, CL2=0, CL1=0 */
#define TMRA_CSCTRL0_INIT 0x0U
/* TMRA_FILT0: FILT_CNT=0, FILT_PER=0 */
#define TMRA_FILT0_INIT 0x0U
/* TMRA_DMA0: CMPLD2DE=0, CMPLD1DE=0, IEFDE=0 */
#define TMRA_DMA0_INIT 0x0U
/* TMRA_ENBL: ENBL=15 */
#define TMRA_ENBL_INIT 0xFU
/* TMRA_COMP11: COMPARISON_1=0 */
#define TMRA_COMP11_INIT 0x0U
/* TMRA_COMP21: COMPARISON_2=0 */
#define TMRA_COMP21_INIT 0x0U
/* TMRA_LOAD1: LOAD=0 */
#define TMRA_LOAD1_INIT 0x0U
/* TMRA_CNTR1: COUNTER=0 */
#define TMRA_CNTR1_INIT 0x0U
/* TMRA_CTRL1: CM=1, PCS=8, SCS=0, ONCE=0, LENGTH=0, DIR=0, COINIT=0, OUTMODE=0 */
#define TMRA_CTRL1_INIT 0x3000U
/* TMRA_SCTRL1: TCFIE=0, TOFIE=0, IEFIE=0, IPS=0, CAPTURE_MODE=0, MSTR=0, EEOF=0, VAL=0, FORCE=0, OPS=0, OEN=0 */
#define TMRA_SCTRL1_INIT 0x0U
/* TMRA_CMPLD11: COMPARATOR_LOAD_1=0 */
#define TMRA_CMPLD11_INIT 0x0U
/* TMRA_CMPLD21: COMPARATOR_LOAD_2=0 */
#define TMRA_CMPLD21_INIT 0x0U
/* TMRA_CSCTRL1: DBG_EN=0, FAULT=0, ALT_LOAD=0, ROC=0, TCI=0, TCF2EN=0, TCF1EN=0, CL2=0, CL1=0 */
#define TMRA_CSCTRL1_INIT 0x0U
/* TMRA_FILT1: FILT_CNT=0, FILT_PER=0 */
#define TMRA_FILT1_INIT 0x0U
/* TMRA_DMA1: CMPLD2DE=0, CMPLD1DE=0, IEFDE=0 */
#define TMRA_DMA1_INIT 0x0U
/* TMRA_COMP12: COMPARISON_1=0 */
#define TMRA_COMP12_INIT 0x0U
/* TMRA_COMP22: COMPARISON_2=0 */
#define TMRA_COMP22_INIT 0x0U
/* TMRA_LOAD2: LOAD=0 */
#define TMRA_LOAD2_INIT 0x0U
/* TMRA_CNTR2: COUNTER=0 */
#define TMRA_CNTR2_INIT 0x0U
/* TMRA_CTRL2: CM=1, PCS=8, SCS=0, ONCE=0, LENGTH=0, DIR=0, COINIT=0, OUTMODE=0 */
#define TMRA_CTRL2_INIT 0x3000U
/* TMRA_SCTRL2: TCFIE=0, TOFIE=0, IEFIE=0, IPS=0, CAPTURE_MODE=0, MSTR=0, EEOF=0, VAL=0, FORCE=0, OPS=0, OEN=0 */
#define TMRA_SCTRL2_INIT 0x0U
/* TMRA_CMPLD12: COMPARATOR_LOAD_1=0 */
#define TMRA_CMPLD12_INIT 0x0U
/* TMRA_CMPLD22: COMPARATOR_LOAD_2=0 */
#define TMRA_CMPLD22_INIT 0x0U
/* TMRA_CSCTRL2: DBG_EN=0, FAULT=0, ALT_LOAD=0, ROC=0, TCI=0, TCF2EN=0, TCF1EN=0, CL2=0, CL1=0 */
#define TMRA_CSCTRL2_INIT 0x0U
/* TMRA_FILT2: FILT_CNT=0, FILT_PER=0 */
#define TMRA_FILT2_INIT 0x0U
/* TMRA_DMA2: CMPLD2DE=0, CMPLD1DE=0, IEFDE=0 */
#define TMRA_DMA2_INIT 0x0U
/* TMRA_FILT3: FILT_CNT=0, FILT_PER=0 */
#define TMRA_FILT3_INIT 0x0U
/* FreeMASTER_Recorder_0's buffer size definition */
#define FREEMASTER_REC_0_SIZE 4096
/* Definition of peripheral ID */
#define FREEMASTER_SERIAL_PERIPHERAL QSCI0
/* Definition of the clock source frequency */
#define FREEMASTER_SERIAL_PERIPHERAL_CLK_FREQ 100000000UL

/***********************************************************************************************************************
 * Global variables
 **********************************************************************************************************************/
/* Recorder0 configuration */
extern FMSTR_U8 FreeMASTER_RecBuffer0[FREEMASTER_REC_0_SIZE];

/***********************************************************************************************************************
 * Initialization functions
 **********************************************************************************************************************/

void BOARD_InitPeripherals(void);

/***********************************************************************************************************************
 * BOARD_InitBootPeripherals function
 **********************************************************************************************************************/
void BOARD_InitBootPeripherals(void);

#if defined(__cplusplus)
}
#endif

#endif /* _PERIPHERALS_H_ */
